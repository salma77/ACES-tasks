{"ast":null,"code":"var _jsxFileName = \"/home/salma/My_Code/Node.js/color-app/src/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport isColor from \"./Input\"; //hook: useRef\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(props) {\n  _s();\n\n  const [color, setColor] = React.useState(\"\");\n  const [renderColor, setRenderColor] = React.useState(\"\");\n  const renderCount = React.useRef(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: color,\n      onChange: event => {\n        setColor(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setRenderColor(color);\n        if (isColor(color)) renderCount.current = renderCount.current + 1;\n      },\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colored-div\",\n      style: {\n        backgroundColor: renderColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"We rendered \", renderCount.current, \" times!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"TGbUnW1C4caeBdgtFg7PfVp0kIw=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/salma/My_Code/Node.js/color-app/src/Input.js"],"names":["React","isColor","Input","props","color","setColor","useState","renderColor","setRenderColor","renderCount","useRef","event","target","value","current","label","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CACA;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAtC;AACA,QAAMG,WAAW,GAAGT,KAAK,CAACU,MAAN,CAAa,CAAb,CAApB;AAEF,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEN,KAA1B;AAAiC,MAAA,QAAQ,EAAGO,KAAD,IAAS;AAChDN,QAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD;AAFH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAI;AACnBL,QAAAA,cAAc,CAACJ,KAAD,CAAd;AACA,YAAGH,OAAO,CAACG,KAAD,CAAV,EACEK,WAAW,CAACK,OAAZ,GAAsBL,WAAW,CAACK,OAAZ,GAAsB,CAA5C;AACH,OAJD;AAAA,gBAIIX,KAAK,CAACY;AAJV;AAAA;AAAA;AAAA;AAAA,YAJF,eASE;AAAK,MAAA,SAAS,EAAE,aAAhB;AAA8B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAET;AAAlB;AAArC;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,iCAAkBE,WAAW,CAACK,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnBQZ,K;;KAAAA,K;AAqBT,eAAeA,KAAf","sourcesContent":["import React from \"react\"; \nimport isColor from \"./Input\";\n//hook: useRef\n\nfunction Input(props){\n    const [color, setColor] = React.useState(\"\");\n    const [renderColor, setRenderColor] = React.useState(\"\");\n    const renderCount = React.useRef(0);\n\n  return(\n    <div>\n      <input type=\"text\" value={color} onChange={(event)=>{\n          setColor(event.target.value);\n        }}/>\n      <button onClick={()=>{\n        setRenderColor(color);\n        if(isColor(color))\n          renderCount.current = renderCount.current + 1;\n      }}>{props.label}</button>\n      <div className= \"colored-div\" style={{backgroundColor: renderColor}}></div>\n      <div>We rendered {renderCount.current} times!</div>\n    </div>\n  )\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}